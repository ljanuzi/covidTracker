{"version":3,"sources":["components/dataForm.jsx","components/landing.jsx","App.js","reportWebVitals.js","index.js"],"names":["DataForm","useState","start_date","setStartDate","end_date","setEndDate","covidCases","setCovidCases","covidAdmissions","setCovidAdmissions","covidDeaths","setCovidDeaths","dates","setDates","casesMedian","setCasesMedian","admissionsMedian","setAdmissionsMedian","deathsMedian","setDeathsMedian","casesMean","setCasesMean","admissionsMean","setAdmissionsMean","deathsMean","setDeathsMean","timeStamp","setTimeStamp","dateEdit","setDateEdit","casesEdit","setCasesEdit","admissionsEdit","setAdmissionsEdit","deathsEdit","setDeathsEdit","dateAdd","setDateAdd","casesAdd","setCasesAdd","admissionsAdd","setAdmissionsAdd","deathsAdd","setDeathsAdd","url","values","year","month","day","className","style","background","Form","Group","widths","selected","onChange","date","display","justifyContent","Checkbox","id","label","Field","Button","onClick","event","preventDefault","document","getElementById","checked","axios","get","params","startDate","toLocaleDateString","endDate","headers","then","response","casesArray","data","map","item","cases","admissionsArray","admissions","deathsArray","deaths","datesArray","console","log","formatedDate","replaceAll","delete","delteData","Input","fluid","value","e","target","post","addData","put","alterData","labels","datasets","backgroundColor","borderColor","borderWidth","Landing","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a13b7f11.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from 'axios';\r\nimport { Form, Button, Checkbox } from \"semantic-ui-react\";\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default function DataForm() {\r\n\r\n    const [start_date, setStartDate] = useState();\r\n    const [end_date, setEndDate] = useState();\r\n    const [covidCases, setCovidCases] = useState([]);\r\n    const [covidAdmissions, setCovidAdmissions] = useState([]);\r\n    const [covidDeaths, setCovidDeaths] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [casesMedian, setCasesMedian] = useState();\r\n    const [admissionsMedian, setAdmissionsMedian] = useState();\r\n    const [deathsMedian, setDeathsMedian] = useState();\r\n    const [casesMean, setCasesMean] = useState();\r\n    const [admissionsMean, setAdmissionsMean] = useState();\r\n    const [deathsMean, setDeathsMean] = useState();\r\n    const [timeStamp, setTimeStamp] = useState();\r\n\r\n    const [dateEdit, setDateEdit] = useState();\r\n    const [casesEdit, setCasesEdit] = useState();\r\n    const [admissionsEdit, setAdmissionsEdit] = useState();\r\n    const [deathsEdit, setDeathsEdit] = useState();\r\n\r\n    const [dateAdd, setDateAdd] = useState();\r\n    const [casesAdd, setCasesAdd] = useState();\r\n    const [admissionsAdd, setAdmissionsAdd] = useState();\r\n    const [deathsAdd, setDeathsAdd] = useState();\r\n\r\n    var url = \"http://localhost:8080\"\r\n    //var url = \"\"\r\n    function getAllData() {\r\n        if (start_date && end_date) {\r\n            axios.get(url + '/api/getData', {\r\n                params: {\r\n                    startDate: start_date.toLocaleDateString(\"en\", values),\r\n                    endDate: end_date.toLocaleDateString(\"en\", values)\r\n                },\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n            }).then((response) => {\r\n                let casesArray = response.data.map((item) => {\r\n                    return item.cases;\r\n                })\r\n                setCovidCases(casesArray)\r\n                let admissionsArray = response.data.map((item) => {\r\n                    return item.admissions;\r\n                })\r\n                setCovidAdmissions(admissionsArray)\r\n\r\n                let deathsArray = response.data.map((item) => {\r\n                    return item.deaths;\r\n                })\r\n                setCovidDeaths(deathsArray)\r\n\r\n                let datesArray = response.data.map((item) => {\r\n                    return item.date;\r\n                })\r\n                setDates(datesArray)\r\n\r\n            });\r\n        } else {\r\n            axios.get(url + '/api/getAllData', {\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            }).then((response) => {\r\n                console.log(typeof response.data)\r\n                let casesArray = response.data.map((item) => {\r\n                    return item.cases;\r\n\r\n                })\r\n                setCovidCases(casesArray)\r\n                let admissionsArray = response.data.map((item) => {\r\n                    return item.admissions;\r\n                })\r\n                setCovidAdmissions(admissionsArray)\r\n\r\n                let deathsArray = response.data.map((item) => {\r\n                    return item.deaths;\r\n                })\r\n                setCovidDeaths(deathsArray)\r\n\r\n                let datesArray = response.data.map((item) => {\r\n                    return item.date;\r\n                })\r\n                setDates(datesArray)\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    function getMean() {\r\n        if (start_date && end_date) {\r\n            axios.get(url + '/api/getMean', {\r\n                params: {\r\n                    startDate: start_date.toLocaleDateString(\"en\", values),\r\n                    endDate: end_date.toLocaleDateString(\"en\", values)\r\n                },\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n            }).then((response) => {\r\n                console.log(response)\r\n                setCasesMean(response.data.cases)\r\n                setAdmissionsMean(response.data.admissions)\r\n                setDeathsMean(response.data.deaths)\r\n            });\r\n        } else {\r\n            axios.get(url + '/api/getAllMeans', {\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            }).then((response) => {\r\n                console.log(response)\r\n                setCasesMean(response.data.cases)\r\n                setAdmissionsMean(response.data.admissions)\r\n                setDeathsMean(response.data.deaths)\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    function getMedian() {\r\n        if (start_date && end_date) {\r\n            axios.get(url + '/api/getMedian', {\r\n                params: {\r\n                    startDate: start_date.toLocaleDateString(\"en\", values),\r\n                    endDate: end_date.toLocaleDateString(\"en\", values)\r\n                },\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n            }).then((response) => {\r\n                console.log(response)\r\n                setCasesMedian(response.data.cases)\r\n                setAdmissionsMedian(response.data.admissions)\r\n                setDeathsMedian(response.data.deaths)\r\n            });\r\n        } else {\r\n            axios.get(url + '/api/getAllMedian', {\r\n                headers: { \"Content-Type\": \"application/json\" }\r\n            }).then((response) => {\r\n                console.log(response)\r\n                setCasesMedian(response.data.cases)\r\n                setAdmissionsMedian(response.data.admissions)\r\n                setDeathsMedian(response.data.deaths)\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    function delteData() {\r\n        var date = timeStamp.toLocaleDateString(\"en\", values)\r\n        var formatedDate = date.replaceAll(\"/\", \"-\")\r\n        axios.delete(url + '/api/deleteData/' + formatedDate, {\r\n            \r\n            headers: { \"Content-Type\": \"application/json\" },\r\n        })\r\n    }\r\n\r\n    function alterData() {\r\n        var date = dateEdit.toLocaleDateString(\"en\", values)\r\n        var formatedDate = date.replaceAll(\"/\", \"-\")\r\n        axios.put(url + '/api/alterData/' + formatedDate , {\"cases\" : casesEdit, \"admissions\" : admissionsEdit, \"deaths\" : deathsEdit}\r\n             \r\n        )\r\n        console.log({\"cases\" : casesEdit, \"admissions\" : admissionsEdit, \"deaths\" : deathsEdit})\r\n    }\r\n\r\n    function addData() {\r\n        var date = dateAdd.toLocaleDateString(\"en\", values)\r\n        var formatedDate = date.replaceAll(\"/\", \"-\")\r\n        axios.post(url + '/api/insertData' , { \"date\":formatedDate,\"cases\" : casesAdd, \"admissions\" : admissionsAdd, \"deaths\" : deathsAdd}\r\n            \r\n        )\r\n        console.log({\"date\":formatedDate,\"cases\" : casesAdd, \"admissions\" : admissionsAdd, \"deaths\" : deathsAdd});\r\n    }\r\n\r\n    var values = {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\"\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"row \" style={{ background: \"#e0f7fa\" }}>\r\n                <h1>Covid-19 Tracker</h1>\r\n            </div>\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h2>Search</h2>\r\n                            <Form>\r\n                                <Form.Group widths='equal'>\r\n                                    <p >Start Date</p>\r\n                                    <DatePicker\r\n                                        selected={start_date}\r\n                                        onChange={date => setStartDate(date)}\r\n                                    />\r\n                                    <br />\r\n                                    <p >End Date</p>\r\n                                    <DatePicker\r\n                                        selected={end_date}\r\n                                        onChange={date => setEndDate(date)}\r\n                                    />\r\n                                </Form.Group>\r\n                                < br />\r\n                                <Form.Group widths='equal'>\r\n                                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                        <Checkbox id=\"allData\" label='All Data' />\r\n                                        <Checkbox id=\"mean\" label='Mean' />\r\n                                        <Checkbox id=\"median\" label='Median' />\r\n                                    </div>\r\n\r\n                                </Form.Group>\r\n                                < br />\r\n                                <Form.Field>\r\n                                    <Button\r\n\r\n                                        onClick={(event) => {\r\n                                            event.preventDefault();\r\n                                            if (document.getElementById(\"allData\").checked) {\r\n                                                getAllData();\r\n                                            }\r\n                                            if (document.getElementById(\"mean\").checked) {\r\n                                                getMean();\r\n                                            }\r\n                                            if (document.getElementById(\"median\").checked) {\r\n                                                getMedian();\r\n                                            }\r\n                                        }\r\n                                        }\r\n                                    >\r\n                                        Submit\r\n                            </Button>\r\n\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <h2>Delete</h2>\r\n                            <Form>\r\n                                <Form.Group widths='equal'>\r\n                                    <p >Start Date</p>\r\n                                    <DatePicker\r\n                                        selected={timeStamp}\r\n                                        onChange={date => setTimeStamp(date)}\r\n                                    />\r\n                                </Form.Group>\r\n                                < br />\r\n                                <Form.Field>\r\n                                    <Button\r\n\r\n                                        onClick={(event) => {\r\n                                            event.preventDefault();\r\n                                            delteData();\r\n                                        }\r\n                                        }\r\n                                    >\r\n                                        Submit\r\n                            </Button>\r\n\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </div>\r\n\r\n                    </div>\r\n                    < hr />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <h2>Add</h2>\r\n                            <Form>\r\n                                <p >Date</p>\r\n                                <DatePicker\r\n                                    selected={dateAdd}\r\n                                    onChange={date => setDateAdd(date)}\r\n                                />\r\n                                < br />\r\n                                <Form.Group widths='equal'>\r\n                                    <Form.Input\r\n                                        fluid label='Cases'\r\n                                    value={casesAdd}\r\n                                    onChange={e => setCasesAdd(e.target.value)}\r\n                                    />\r\n                                    <Form.Input\r\n                                        fluid label='Admissions'\r\n                                    value={admissionsAdd}\r\n                                    onChange={e => setAdmissionsAdd(e.target.value)}\r\n                                    />\r\n                                    <Form.Input\r\n                                        fluid label='Deaths'\r\n                                    value={deathsAdd}\r\n                                    onChange={e => setDeathsAdd(e.target.value)}\r\n                                    />\r\n\r\n                                </Form.Group>\r\n                                < br />\r\n                                <Form.Field>\r\n                                    <Button\r\n\r\n                                        onClick={(event) => {\r\n                                            event.preventDefault();\r\n                                            addData();\r\n                                        }\r\n                                        }\r\n                                    >\r\n                                        Submit\r\n                            </Button>\r\n\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-6\">\r\n                            <h2>Edit</h2>\r\n                            <Form>\r\n                                <Form.Group widths='equal'>\r\n                                    <p >Start Date</p>\r\n                                    <DatePicker\r\n                                        selected={dateEdit}\r\n                                        onChange={date => setDateEdit(date)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group widths='equal'>\r\n                                    <Form.Input\r\n                                        fluid label='Cases'\r\n                                        value={casesEdit}\r\n                                        onChange={e => setCasesEdit(e.target.value)}\r\n                                    />\r\n                                    <Form.Input\r\n                                        fluid label='Admissions'\r\n                                        value={admissionsEdit}\r\n                                        onChange={e => setAdmissionsEdit(e.target.value)}\r\n                                    />\r\n                                    <Form.Input\r\n                                        fluid label='Deaths'\r\n                                        value={deathsEdit}\r\n                                        onChange={e => setDeathsEdit(e.target.value)}\r\n                                    />\r\n\r\n                                </Form.Group>\r\n                                < br />\r\n                                <Form.Field>\r\n                                    <Button\r\n\r\n                                        onClick={(event) => {\r\n                                            event.preventDefault();\r\n                                            alterData();\r\n                                        }\r\n                                        }\r\n                                    >\r\n                                        Submit\r\n                            </Button>\r\n\r\n                                </Form.Field>\r\n                            </Form>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"col-md-6\">\r\n                    <Line\r\n                        data={{\r\n                            labels: dates,\r\n                            datasets: [\r\n                                {\r\n                                    label: 'Active Cases',\r\n                                    // fill: false,\r\n                                    // lineTension: 0.5,\r\n                                    backgroundColor: 'rgba(75,192,192,1)',\r\n                                    borderColor: 'rgba(75,192,192,1)',\r\n                                    borderWidth: 2,\r\n                                    data: covidCases\r\n                                },\r\n                                {\r\n                                    label: 'Admissions',\r\n                                    // fill: false,\r\n                                    // lineTension: 0.5,\r\n                                    backgroundColor: 'rgba(255, 255, 88, 1)',\r\n                                    borderColor: 'rgba(255, 255, 88, 1)',\r\n                                    borderWidth: 2,\r\n                                    data: covidAdmissions\r\n                                },\r\n                                {\r\n                                    label: 'Deaths',\r\n                                    // fill: false,\r\n                                    // lineTension: 0.5,\r\n                                    backgroundColor: 'rgba(255, 0, 0, 1)',\r\n                                    borderColor: 'rgba(255, 0, 0, 1)',\r\n                                    borderWidth: 2,\r\n                                    data: covidDeaths\r\n                                }\r\n                            ]\r\n                        }}\r\n                    />\r\n\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n\r\n                    <h1>Mean</h1>\r\n                    <p>Cases:{casesMean}</p>\r\n                    <p>Admissions:{admissionsMean}</p>\r\n                    <p>Deaths:{deathsMean}</p>\r\n                    <hr />\r\n                    <h1>Median</h1>\r\n                    <p>Cases:{casesMedian}</p>\r\n                    <p>Admissions:{admissionsMedian}</p>\r\n                    <p>Deaths:{deathsMedian}</p>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport DataForm from \"./dataForm\";\r\n\r\n\r\nexport default function Landing() {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    return (\r\n\r\n        <div className=\"container-fluid\">\r\n\r\n            <DataForm/>\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}","import React from 'react';\nimport {\n  Switch,\n  Route,\n  BrowserRouter,\n} from \"react-router-dom\";\nimport './App.css';\n\nimport Landing from '../src/components/landing';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div>\n          <Switch>\n            <Route exact={true} path=\"/\" component={Landing}></Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}